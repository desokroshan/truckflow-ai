import nodemailer from "nodemailer";

const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST || "smtp.gmail.com",
  port: 587,
  secure: false,
  auth: {
    user: process.env.SMTP_USER || process.env.EMAIL_USER || "default_user",
    pass: process.env.SMTP_PASS || process.env.EMAIL_PASS || "default_pass",
  },
});

interface LoadNotificationData {
  loadId: string;
  customerName: string;
  customerPhone: string;
  route: string;
  cargoType: string;
  weight: string;
  truckType: string;
  deadline?: string;
  summary: string;
}

export async function sendOwnerNotification(
  ownerEmail: string, 
  loadData: LoadNotificationData,
  approveUrl: string,
  rejectUrl: string
): Promise<void> {
  try {
    const emailHtml = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background-color: #2563EB; color: white; padding: 20px; text-align: center;">
          <h1 style="margin: 0;">üöõ TruckFlow AI - New Load Request</h1>
          <p style="margin: 5px 0 0 0;">Load ID: ${loadData.loadId}</p>
        </div>
        
        <div style="padding: 20px; background-color: #f8f9fa;">
          <h2 style="color: #1f2937; margin-top: 0;">Load Details</h2>
          
          <div style="background-color: white; padding: 15px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="color: #374151; margin-top: 0;">Customer Information</h3>
            <p><strong>Name:</strong> ${loadData.customerName}</p>
            <p><strong>Phone:</strong> ${loadData.customerPhone}</p>
          </div>
          
          <div style="background-color: white; padding: 15px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="color: #374151; margin-top: 0;">Route & Cargo</h3>
            <p><strong>Route:</strong> ${loadData.route}</p>
            <p><strong>Cargo:</strong> ${loadData.cargoType}</p>
            <p><strong>Weight:</strong> ${loadData.weight}</p>
            <p><strong>Equipment:</strong> ${loadData.truckType}</p>
            ${loadData.deadline ? `<p><strong>Deadline:</strong> ${loadData.deadline}</p>` : ''}
          </div>
          
          <div style="background-color: white; padding: 15px; border-radius: 8px; margin-bottom: 30px;">
            <h3 style="color: #374151; margin-top: 0;">AI Summary</h3>
            <p style="line-height: 1.6;">${loadData.summary}</p>
          </div>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="${approveUrl}" 
               style="background-color: #16A34A; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin-right: 10px; display: inline-block;">
              ‚úÖ Approve Load
            </a>
            <a href="${rejectUrl}" 
               style="background-color: #DC2626; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
              ‚ùå Reject Load
            </a>
          </div>
          
          <div style="text-align: center; color: #6b7280; font-size: 14px; margin-top: 30px;">
            <p>This notification was automatically generated by TruckFlow AI</p>
            <p>Processed at: ${new Date().toLocaleString()}</p>
          </div>
        </div>
      </div>
    `;

    const mailOptions = {
      from: process.env.SMTP_USER || "noreply@truckflowai.com",
      to: ownerEmail,
      subject: `üöõ New Load Request - ${loadData.loadId}`,
      html: emailHtml,
    };

    await transporter.sendMail(mailOptions);
    console.log(`Notification email sent to ${ownerEmail} for load ${loadData.loadId}`);
  } catch (error) {
    console.error("Error sending email notification:", error);
    throw new Error("Failed to send email notification: " + (error as Error).message);
  }
}

export async function sendOwnerSMS(
  phoneNumber: string,
  loadId: string,
  customerName: string,
  route: string
): Promise<void> {
  // In a real implementation, this would integrate with Twilio SMS
  // For now, we'll just log the SMS that would be sent
  console.log(`SMS would be sent to ${phoneNumber}:`);
  console.log(`üöõ TruckFlow AI: New load request ${loadId} from ${customerName}. Route: ${route}. Check email for details.`);
}
